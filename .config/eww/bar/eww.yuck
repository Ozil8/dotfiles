;; Eww Launch Prefix
(defvar EWW "/usr/bin/eww --config $HOME/.config/eww/bar/")

;; workspaces widget
(defvar workspace-names "[1, 2, 3, 4, 5, 6, 7, 8, 9]")

(defpoll desktop-focused-bspwm
  :interval "250ms"
  :initial "initial-value"
  "bspc query -D -d focused --names"
)

(defwidget Workspaces [desktop-focused]
  (box
    :class "workspaces"
    :orientation "h"
    :space-evenly true
    :halign "start"
    :spacing 2

    (for entry in workspace-names
      (button
        :class "${desktop-focused == entry ? 'workspace-focused' : ''} workspace-button button-generic" 
        :onclick "wmctrl -s ${entry - 1}" 
        entry 
      )
    )
  )
)

;; Clock Widget
(defvar date-visible false)

(defpoll time
  :interval "500ms"
  :initial "0"
  "date +%I:%M\\ %p"
)

(defpoll weekday
  :interval "1m"
  :initial "Sunday"
  "date +%A"
)

(defpoll month-day
  :interval "1m"
  :initial "January 1st"
  "scripts/time"
)

(defwidget Clock []
  (box
    :orientation "h"
    :space-evenly true
    :spacing "6"

    (revealer
      :transition "crossfade"
      :reveal date-visible
      :duration "300ms"

      weekday
    )

    (eventbox
      :class "clock-box"
      :onhover "${EWW} update date-visible=true"
      :onhoverlost "${EWW} update date-visible=false"

      (button
        :class "clock-button button-generic"
        :onclick "echo fuck"

        time
      )
    )

    (revealer
      :transition "crossfade"
      :reveal date-visible
      :duration "300ms"

      month-day
    )
  )
)

;; Volume Widget
(defvar volume-visible false)

(defpoll volume-current 
  :interval "250ms" 
  :initial "initial-value"
  "pamixer --get-volume"
)

(defpoll volume-mute
  :interval "1s"
  :initial "false"
  "pamixer --get-mute"
)

(defwidget Volume [current-volume]
  (eventbox
    :class "volume-box" 
    :onhover "${EWW} update volume-visible=true"
    :onhoverlost "${EWW} update volume-visible=false"

    (box
      :orientation "h"
      :space-evenly "false"
      :spaceing "2"

      (revealer
        :transition "slideleft"
        :reveal volume-visible
        :duration "550ms"

        (scale
          :value current-volume
          :orientation "h"
          :flipped false
          :tooltip "Volume: ${current-volume}"
          :max 101
          :min 0
          :onchange "printf '%.0f' {} | xargs pamixer --set-volume"
        )
      )

      (button
        :onclick "pamixer --toggle-mute && ${EWW} update volume-mute=true"  
        :class "button-generic volume-button"
        {volume-mute ? "󰝟" : "󰕾"}
      )
    )
  )
)

;; Battery Widget
(defpoll battery-icon
  :interval "1s"
  :initial "initial-value"
  "scripts/battery"
)

(defpoll battery-percent
  :interval "1s"
  :initial "initial-value"
  "acpi | sed -e '/Unknown/D' -e 's/,//g' -e 's/Not Charging/NotCharging/g' -e 's/%//g' | awk '{print $4}'"
)

(defpoll battery-estimate
  :interval "1s"
  :initial "initial-value"
  "acpi | sed -e '/Unknown/D' -e 's/,//g' -e 's/Not Charging/NotCharging/g' -e 's/%//g' | awk '{print $5}'"
)

(defwidget Battery []
  (box
    :class "battery-box"
    :orientation "h"
    :space-evenly "false"
    :spaceing "2"
    :tooltip "${battery-percent}% ${battery-estimate}"
    
    
    (button
      :onclick "alacritty -e btop &"  
      :class "battery-button button-generic"
      "${battery-icon}"
    )
  )
)

;; Internet Widget
(defvar internet-status-visible false)

(deflisten internet-icon
  :interval "1s"
  :initial "initial-value"
  "scripts/internet"
)

(defpoll internet-connected
  :interval "1s"
  :initial "initial-value"
  "nmcli -t device | rg 'connected' > /dev/null && echo 'true' || echo 'false'"
)

(defpoll internet-ethernet
  :interval "1s"
  :initial "initial-value"
  "nmcli -t device | rg 'ethernet:connected' > /dev/null && echo 'true' || echo 'false'"
)

(defpoll internet-ssid
  :interval "1s"
  :initial "initial-value"
  "nmcli -t -f IN-USE,SSID device wifi | sed '/^\*/!D' | cut -d ':' -f 2-"
)

(defwidget Internet []
  (eventbox
    :onhover     "${EWW} update internet-status-visible=true"
    :onhoverlost "${EWW} update internet-status-visible=false"

    (box
      :class "internet-box"
      :orientation "h"
      :space-evenly "false"
      :spaceing "2"

      (revealer
        :transition "slideleft"
        :reveal internet-status-visible
        :duration "550ms"

        "${internet-ssid}  " 
      )
      
      (button
        :class "internet-button button-generic"
        :onclick "echo fuck"
        {internet-status-visible ? "${internet-icon}" : internet-ethernet ? "󰌗" : "󰖩" }
      )
    )
  )
)

;; Render bar
(defvar fullscreen true)

(defwindow bar
  :monitor 0
  :geometry (geometry
              :x "0%"
              :y "0%"
              :width "100%"
              :height "65px"
              :anchor "top center"
            )
  :stacking "bg"
  :reserve (struts :distance "69px" :side "top")
  :windowtype "dock"
  :wm-ignore false
  (bar-content)
)

(defvar close-bar-visible false)

(defwidget close-bar []
  (box
    :class "close-bar"
    :visible close-bar-visible

    (button
      :onclick "${EWW} kill"
      :class "button-generic bar-close" "󰅖"
    )
  )
)

(defwidget bar-content []
  (box

    (box
      :halign "start"
      :visible fullscreen

      (Workspaces
        :desktop-focused desktop-focused-bspwm
      )
    )
    (box
      :halign "center"
      :visible fullscreen

      (Clock)
    )
    (box
      :halign "end"
      :spacing 2
      :space-evenly false
      :visible fullscreen

      (Internet)
      (Volume :current-volume volume-current)
      (Battery)
      (close-bar)
    )
  )
)
