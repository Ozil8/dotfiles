nvim .config/zsh/
cd ~/.config/zsh/plugins/zsh-autocomplete
git pull
git merge
git restore
git restore .
git commit -a
clear
git reset
ls
git pull
git pull
git merge
clear
nvim .
clear
git push
sudo visudo
sudo ls
sudo echo "Hello, world!\
"
clear
cd
clear
clear
mkdir ~/.local/bin
cd ~/.local/bin
cd
vifm
playx-xdg
cd
clear
ls
ls --icons
cleaer
clear
clear
exit
tmux attach || tmux
tmux attach || tmux
clear
clear
tmux -CC
clear
tmux -CC attach
clear
nvim .config/zsh/prompt.zsh
source ~/.config/zsh/prompt.zsh
nvim .config/zsh/prompt.zsh
source ~/.config/zsh/prompt.zsh
nvim .config/zsh/prompt.zsh
source ~/.config/zsh/prompt.zsh
clear
exit
nvim .config/zsh/prompt.zsh
clear
clear
clear
clear
cd ~/.config/zsh/plugins/
sudo rm -r zsh-autocomplete
ls
ls
source ~/.config/zsh/.zshrc
exit
cd ~/.config/zsh/plugins/
git clone https://github.com/marlonrichert/zsh-autocomplete -b dev
cd
source ~/.config/zsh/.zshrc
nvim .config/zsh/plugins.zsh
clear
nvim .config/zsh/plugins/zsh-autocomplete/zsh-autocomplete.plugin.zsh
nvim .config/zsh/plugins
cd ~/.config/zsh/plugins
git commit -a
git push
cd
clear
cd ~/.config/zsh/plugins
ls
sudo visudo
sudo rm -r zsh-autocomplete
source ~/.config/zsh/.zshrc
exit
clear
cd ~/.config/zsh/plugins
ls
git clone https://github.com/marlonrichert/zsh-autocomplete -b master
ls
git commit -a 
git push
source ~/.config/zsh/.zshrc
ls
nvim
exit
tmux attach || tmux
tmux attach || tmux
tmux attach || tmux
tmux attach || tmux
tmux 
source ~/.config/zsh/.zshrc
cd ~/.config/zsh/plugins/
git clone https://github.com/marlonrichert/zsh-autocomplete.git -b dev
sudo rm -r zsh-autocomplete && git clone https://github.com/marlonrichert/zsh-autocomplete.git -b dev
ls
source ~/.config/zsh/.zshrc
exit
tmux attach || tmux
tmux attach || tmux
tmux 
tmux attach || tmux
tmux attach || tmux
tmux attach || tmux
tmux attach || tmux
'/Users/dickssau000/Library/Application Support/Steam/steamapps/common/SlayTheSpire/SlayTheSpire.app/Contents/MacOS/SlayTheSpireTroubleshoot.command'; exit
tmux attach || tmux
tmux attach || tmux
clear
man emulate
brew install emulate
man zsh
clear
fzf
clear
ls
rm .viminfo .python_history .bash_history .lesshst
ls
cat .wget-hsts
cat .DS_Store
clear
ls
ls .sheldon
ls .sheldon/repos
cd .local/share
ls
rm issy
sudo rm -r issy
ls nvim
ls vifm
ls fonts
clear
ls
ls GameAnalytics
cd ..
ls
cd bin
ls
wget https://github.com/LukeSmithxyz/voidrice/blob/master/.local/bin/unix
ls
./unix
chmod -x unix
chmod +x unux
chmod +x unix
./unix
clear
cd
ls
brew uninstall cordless
brew cask uninstall cordless
sudo rm -r .cordless
ls
sudo rm -r .idlerc 
ls
ls --icons
ls -@
0=ls -@;ls -@;ls -@;ls -@
ls
killall Tiles && open -a Tiles
npm i css.gg
nvim ~/Projects/src/github.com/Saul-Dickson/bento
defaults read com.apple.mail
defaults read com.apple.mail | less
nvim ~/Projects/src/github.com/Saul-Dickson/bento
cd ~/Projects/src/github.com/Saul-Dickson/bento
git commit -a
git push
cd
ls
rm package-lock.json
ls
clear
cd ~/Projects/src/github.com/Saul-Dickson/bento
git pull
nvim ~/Library/ApplicationSupport/Steam/steamapps/common/SlayTheSpire/SlayTheSpire.app/Contents/MacOS/launcher_opts.toml
cd
clear
nvim ~/Projects/src/github.com/Saul-Dickson/bent
cd ~/Projects/src/github.com/Saul-Dickson/bento
git commit -a && git push
\:q
cd
exit
tmux attach || tmux
clear
tmux attach || tmux
tmux attach || tmux
tmux attach || tmux
killall Tiles && open -a Tiles
killall GIFPaperAgent && open -a GIFPaperAgent
nvim ~/Projects/src/github.com/Saul-Dickson/bento
cd ~/Projects/src/github.com/Saul-Dickson/bento
git commit -a && git push
clear
cd
clear
killall GIFPaperAgent && open -a GIFPaperAgent
clear
nvim ~/Documents/Chemistry/
clear
exit
tmux attach || tmux
killall tmux
exit
1¬ÉÅ¬ÉÅ¬ÉÅ¬ÉÅ¬ÉÅ¬ÉÅ¬ÉÅ¬ÉÅ¬ÉÅ¬ÉÅ¬ÉÅ¬ÉÅ¬ÉÅ¬ÉÅ¬ÉÅ¬ÉÅ¬ÉÅ¬ÉÅ¬ÉÅ¬ÉÅ¬ÉÅ¬ÉÅ¬ÉÅ¬ÉÅ¬ÉÅ1
clear
nvim .config/nvim/plug.vim
nvim
nvim .config/nvim/plug.vim
nvim .config/nvim/plug.vim
clear
nvim .config/nvim/
nvim .config/nvim
brew install rustup
clear
rustc
clear
brew uninstall rustup
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
rustc
rustup component add rustfmt
rustc component add rustfmt
brew uninstall rust
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
clear
rustup component add rustfmt
clear
cargo install rustfmt
cargo
clear
brew install rustup
rustup component add rustfmt
rustc help
rustc 
brew install rust
rustc
rustc --help
cargo fmt
ls
cargo fmt
rustfmt
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
ls
sudo curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
ls
rustup component add rustfmt
cargo
cargo install rustfmt
.cargo/bin/rustfmt
clear
nvim .zshenv
cd ~/Projects/src/github.com/Saul-Dickson/dotfiles
git commit -a
git push
git 
cd
clear
clear
clear
cargo install clippy
rustup component add clippy
rustup component add clippy-preview
cargo install clippy
clippy-driver
lear
clear
git clone https://github.com/rust-analyzer/rust-analyzer && cd rust-analyzer\
cargo xtask install --server
cd ..
sudo rm -r rust-analyzer node_modules
ra_lsp_server --version
git clone https://github.com/rust-analyzer/rust-analyzer && cd rust-analyzer\
cargo xtask install --server
ls
.cargo/bin/rust-analyzer
ra_lsp_server --version
clear
clear
nvim .config/nvim/plug.vim
nvim
clear
nvim
nvim :PlugInstall
exit
cd ~/.config/zsh/plugins
git clone https://github.com/olets/zsh-abbr 
cd zsh-abbr
ls
cd ..
nvim ../plugins.zsh
exit
abbr 
abbr gca="git commit -a"
git commit -a
git commit -a 
nvim .config/zsh/
ls .config/zsh
nvim Library/ApplicationSupport/Steam/steamapps/common/SlayTheSpire/SlayTheSpire.app/Contents/Resources/info.displayconfig
exit
cd ~/Projects/src/github.com/Saul-Dickson/dotfiles
git commit -a
git push
clear
git status
git add **
git add .config/*
git commit -a
git commit -a
git push
clear
brew cask install githucli
brew cask install githubcli
clear
nvim
vifm ~/Projects/src/github.com/Saul-Dickson/dotfiles
nvim ~/Projects/src/github.com/Saul-Dickson/dotfiles
clear
nvim
brew upgrade
sudo xcode-select --install
sudo xcode-select Software Update
whereis buftabline.txt
locate buftabline.txt
fzf
clear
brew install macho
cd .local/bin
ls
nvim macho
cd
nvim .zshenv
exit
macho
cd .local/bin
chmod +x macho
cd
macho
macho
brew install apropros
apropos -s
cd
clear
macho
apropos
man apropos
whatis open
clear
macho -s
clear
macho
clear
brew install gh
gh 
clear
pip install pipenv
pipenv
python -V
clear
pipenv install requests
ls
rm Pipfile
ls
clear
nvim .zshenv
cd ./Projects/src/github.com/Saul-Dickson
open https://github.com
mkdir pytap
cd pytap
git clone https://github.com/Saul-Dickson/pytap
ls
sudo rm -r pytap
cd ..
git clone https://github.com/Saul-Dickson/pytap
cd pytap
ls
cat README.md
clear
ls
clear
ls
cat .gitignore
clear
pip install samplemod
clar
clear
mkdir sample
mkdir test
mkdir docs
mv test tests
ls
cd sample
touch __init__.py
nvim __init__.py
cd ..
pipenv
pipenv --python 3.8
ls
cat Pipfile
clear
pipenv install curtsies
ls
cat Pipfile
ls
git commit -a
git add sample
git add Pipfile Pipfile.lock
git commit -a
git push
cd
clear
echo "Hello world"
cd ~/Projects/src/github.com/Saul-Dickson/pytap
python
clear
brew cask install keycastr
celar
clear
clear
open https://github.com/new
man ls
clear
cd ~/Projects/src/github.com/Saul-Dickson/
git clone https://github.com/Saul-Dickson/als
cd als
ls
cat LICENSE | less
clear
ls;  cat LICENSE | more
clear
nvim README.md
git commit -a
git push
clear
ls
ls
touch sample.py
nvim sample.py
python sample.py
nvim sample.py
python sample.py
nvim sample.py
python sample.py
nvim sample.py
python sample.py
nvim sample.py
python sample.py
nvim sample.py
python sample.py
nvim sample.py
python sample.py
nvim sample.py
python -c "import pathlib; print(str(pathlib.Path().cwd))"
nvim sample.py
clear
ls
pipenv --python 3.8
 pipenv install plumbum
ls
git commit -a
git add Pipfile.lock Pipfile sample.py 
git commit -a
git push
clear
cd ~/Projects/src/github.com/Saul-Dickson/als
nvim sample.py
python sample.py
python sample.py .
python sample.py $(pwd)
nvim sample.py
python sample.py $(pwd)
nvim sample.py
python sample.py $(pwd)
nvim sample.py
cd ../dotfiles/
cd .config/nvim
ls
nvim init.vim
nvim plug.vim
cd ../als
cd ../../../als
ls
cat Pipfile
cat Pipfile.lock
clear
ls
rm Pipfile*
ls
nvim sample.py
nvim sample.py
pip upgrade
pip install --upgrade
pip help install
pip install --upgrade jedi
nvim sample.py
pipenv --python 3.8
pipenv install jedi plumbum yapf
nvim sample.py
clear
nvim sample.py
python sample.py
python sample.py ~/
python sample.py.
python sample.py .
python sample.py -h
nvim sample.py
nvim sample.py
python sample.py -h
test -e "python sample.py"
time (python sample.py)
git commit -a
git push
clear
cd ~/Projects/src/github.com/Saul-Dickson/als
ls
nvim sample.py
cd ~/Projects/src/github.com/Saul-Dickson/als
nvim sample.py
pipenv install termcolor
pipenv run
nvim sample.py
python
nvim sample.py
nvim sample.py
python sample.py
nvim sample.py
pipenv install colored
pipenv uninstall termcolor
nvim sample.py
clear
python sample.py
pip install colored
python sample.py
nvim sample.py
python sample.py
nvim sample.py
python sample.py
nvim sample.py
python sample.py
git commit -a
git push
clear
cd ~/Projects/src/github.com/Saul-Dickson/als
nvim sample.py
mkdir sample
mv sample.py ./sample/__init__.py
ls
nvim ./sample/config.py
cd ./sample
ls
mv __init__.py main.py
touch __init__.py
ls
nvim config.py
python sample.py
cd sample
python sample.py
python main.py
nvim main.py
python sample.py
python main.py
nvim main.py
python main.py
nvim sample.py
nvim config.py
python main.py
ls
cat config.py
cd ..
ls
mv sample als
ls
cd als
ls
mv main.py __main__.py
ls
cd ..
git commit -a
git add ./als
git commit -a
git push
cd als
nvim __main__.py
cd ~/
cd ~/Projects/src/github.com/Saul-Dickson/als
ls
cd als
ls
cd ..
python als/__main__.py
ls
clear
ls
cd als
ls
nvim __main__.py
ping youtube.com
clear
nvim __main__.py
python __main__.py
nvim __main__.py
python __main__.py
nvim __main__.py
python __main__.py
python __main__.py --color
python __main__.py -h
nvim __main__.py
python __main__.py -h
python __main__.py --color
nvim __main__.py
python __main__.py
python __main__.py --color
nvim __main__.py
python __main__.py --color
nvim __main__.py
pip3 install pynvim
pip3 install neovim
nvim ../../dotfiles/.config/nvim/options.vim
nvim __main__.py
nvim ../../dotfiles/.config/nvim/options.vim
nvim __main__.py
cd ../../..//Users/dickssau000/Projects/src/github.com/Saul-Dickson/dotfiles/.config/nvim/site
cd ~/Projects/src/github.com/Saul-Dickson/dotfiles
ls
cd .config
ls
cd nvim
ls
git commit -a
git push
cd ../../../als/als
ls
nvim __main__.py
nvim __main__.py
cd ../../dotfiles/.config/nvim/site/autoload
wget https://github.com/sentientmachine/Pretty-Vim-Python/blob/master/syntax/python.vim
ls
cd
cd ~/Projects/src/github.com/Saul-Dickson/als/als
ls
nvim __main__.py
clear
cd && clear
brew install bashtop
htop
clear
brew cask install onlyoffice
brew cask uinstall libreoffice
brew cask uninstall libreoffice
clear
nvim ~/.config/zsh/keybind.zsh
s -p duck apply keybindings zsh
nvim ~/.config/s/config
s --version
nvim ~/.config/s/config
s --version
clear
htop
clear
bindkey -M viins '^c' clear
bindkey -M '^R' clear
bindkey -M command '^R' clear
clear
exit
pip3 install pynvim neovim --upgrade
sudo pip3 install pynvim neovim --upgrade
vifm
vifm
clear
clear && cd
vifm ~/Projects/src/github.com/Saul-Dickson/als
sudo pip3 install jedi semshi
brew cask instal gnvim
brew cask install gnvim
ping youtube.com
ping youtube.com
ping youtube.com
clear
vifm
cd && clear
brew install easy_install
cd ~/Downloads
ls
cd github.com
ls
sudo rm -r *.tar
ls
sudo easy_install Pygments
mkdir colorizecat
cd colorizecat
curl -O http://python-distribute.org/distribute_setup.py
ls
sudo python distribute_setup.py
sudo rm distribute_setup.py
cd ..
rm colorizecat
rm -r colorizecat
ls
alias ccat='pygmentize -O console256 -g'
cd
ls
ccat .zshenv
alias ccat='_pygmentize -O console256 -g'
ccat .zshenv
clear
sudo easy_install-3.8 Pygments
sudo pip3 install Pygments
pygmentize -O console256 -g .zshenv
pygmentize -h
pygmentize -h | less
pygmentize -S colorful -O console256 -g .zshenv
clear
pygmentize -S colorful -g .zshenv
pygmentize -O console256 -g .zshenv
pygmentize -S colorful -O console256 -g .zshenv
pygmentize -g .zshenv
pygmentize -S bw -O console256 -g .zshenv
man pygmentize
pygmentize -h | less
pygmentize -S bw .zshenv
cat .zshenv | pygmentize -S bw
cat .zshenv | pygmentize -s -S bw
cd Documents/
mkdir other
cd other
nvim 10-13-20\ Notes.txt
htop
nvim 10-13-20\ Notes.md
clear
ping google.com
clear
s -p github semshi
brew install gtk+3 librsvg
ls
cd ~/Downloads/github.com/
ls
open gnvim-0.1.6.tar
ls
cd gnvim-0.1.6
ls
make NOWEBKIT2GTK=1 install
cargo build --no-default-features
ls
cargo install .
cargo build
ls
cd ..
ls
sudo rm -r gnvim-0.1.6 gnvim-0.1.6.tar
git clone https://github.com/vhakulinen/gnvim
ls
cd gnvim
cargo build --no-default-features
cd
open -a gnvim
cd ~/Downloads/github.com/gnvim/
ls
cargo install .
ls
cd
ls
cd .cargo
ls
cd bin
ls
cd ..
ls
cd ..
ls
cd rustup
cd .rustup
ls
cd 
cd ~/Downloads/github.com/gnvim/
ls
make install
make
make NOWEBKIT2GTK=1
clear
ls
cargo run gnvim
cd
cd ~/Downloads/github.com/gnvim/runtime/
cargo run
cd ..
cargo build --no-default-features
cargo install gnvim
ls
cargo run
clear
ls
make NOWEBKIT2GTK=1 install
make NOWEBKIT2GTK=1 && sudo make install
sudo make install -d
cargo run --no-default-features
cargo build --no-default-features
ls
cargo install
cargo install --path .
sudo cargo install --path .
cd
cd ~/Downloads/github.com/g
cd ~/Downloads/github.com/
ls
sudo rm -r gnvim
ls
ls
cd ..
find gnvim
cd
cd /
find gnvim
find *gnvim*
ls
cd
clear
nvim ~/.config/nvim/plug.vim
clear
clear
cd ~/Projects/src/github.com/Saul-Dickson/als/als
ls
nvim __main__.py
nvim __main__.py
nvim __main__.py
nvim __main__.py
cd ..
pipenv install colored
ls
pygmentize -O console256 -g Pipfile
pipenv uninstall jedi yapf pylint
nvim als/__main__.py
ls
pygmentize -O console256 -g Pipfile
git commit -a
git push
cd als
ls
nvim __main__.py
cd ..
pipenv install pylint
vifm
cd
mv .pylint.d ~/.local/share/pylint.d
nvim .zshenv
ls
cd ssh
ls
cd .ssh
ls
cd ..
rm -r .ssh
ls
open -a Dictionary grunt
open -a Dictionary "grunt"
open -a Dictionary
z usr
clear
npm config ls -1 | less
npm config ls -l1
npm config ls -l
npm config cache = "$HOME/.cache/npm\
"
npm config set cache "$HOME/.cache/npm"
npm config ls -l
ls
npm config set userconfig = "$HOME/.config/npm/npmrc\
"
ls
rm npmrc
rm .npmrc
ls
npm config ls -l
npm config set userconfig "$HOME/.config/npm/npmrc"
ls
npm config set cache "$HOME/.cache/npm"
ls
rm .npm
sudo rm -r .npm
npm
ls
mv .npmrc ~/Projects/src/github.com/Saul-Dickson/dotfiles/.npmrc
ls
ln -sF ~/Projects/src/github.com/Saul-Dickson/dotfiles/.npmrc ~/.npmrc
ls
npm config ls -l
clear
nvim .zshenv
ls
rm .npmrc
cd ~/Projects/src/github.com/Saul-Dickson/dotfiles
mkdir .config/npm
mv .npmrc .config/npm
ls
nvim .zshenv
ls
cd
ls
cd .config
ls
ln -sF ~/Projects/src/github.com/Saul-Dickson/dotfiles/.config/npm/
ls
cd pm
cd npm
ls
git commit -a
git push
git add .
git add .npmrc
git commit -a
git push
cd
source .zshenv
npm config ls -l
nvim ~/.config/npm/.npmrc
killall npm
npm config source ~/.config/npm/.npmrc
npm config get cache
npm config set cache "$HOME/.cache/npm"
cat ~/.config/npm/.npmrc
npm config ls -l
clear
ping google.com
ping google.com
nvim .zshenv
ls
mv .cargo ~/.local
ls .local
mv ~/.local/.cargo ~/.local/cargo
ls .local
source .zshenv
ls
rm .npm
rm -r .npm
npm config ls -l
ls
cargo --version
ls
ls
nvim .zshenv
mv .rustup .local/rustup
cat .zshenv
source .zshenv
ls
ls .sheldon
cat .sheldon/plugins.toml
brew uinstall sheldon
brew uninstall sheldon
sudo rm -r .sheldon
ls
rm .viminfo .python_history .wget-hsts
ls
pygmentize -O console256 -g Pipfile
pygmentize -O console256 -g .zshenv
nvim .zshenv
ls
clear
ls
exa ~/.local
ls ~/.local
cd ~/Projects/src/github.com/Saul-Dickson/als
git commit -a
git commit
cd ~/Projects/src/github.com/Saul-Dickson/als/als
ls
nvim __main__.py
python 
nvim __main__.py
nvim __main__.py
ls
nvim outline.md
cd .
cd ..
git commit -a
git add outline.md
ls
git commit -a
git push
nvim outline.md
git commit -a
git push
nvim outline.md
vifm
cd ../dotfiles
git commit -a
git push
cd
clear
cd Library/KeyboardServices/
ls
cd ..
ls
cd ..
nvim .zshenv
echo $OSTYPE
nvim .zshenv
clear
exit
cd .local
ls
cp -r cargo ~/Library && cp -r rustup ~/Library
ls ~/Library
ls
sudo rm -r cargo rustup
ls
cd bin
ls
./unix
pygmentize -O console256 -g unix
ls
rm unix
ls
./macho
ls
pygmentize -O style=colorful macho
pygmentize -O style=colorful -g macho
pygmentize -O -S inkpot -g macho
pygmentize -O -S inkpot
pygmentize -S inkpot
pygmentize -O style=inkpot -g macho
cd
ls
playx -p -s
playx -p
sudo pip3 install playx
playx -p
brew install playx
sudo pip3 uninstall playx && sudo pip3 install playx
sudo pip3 install playx
pip3 install playx
cd Downloads/github.com/
sudo rm -r playx
git clone https://github.com/NISH1001/playx
cd playx
sudo pip3 install -e .
cd
playx -p
cd playx/songs
ls
cd .playx/songs
ls
playx -p .
playx -p
ls ~/.cache/playx/songs
ls ~/.cache/playx
mv * ~/.cache/playx/songs
ls
cd ../..
ls
playx -p
ls
ls .cache/playx
ls .local/share/playx/logs
pygmentize -O style=inkpot -g .local/share/playx/logs/log.cat
sudo rm -r .playx
ls
rm .python_history
cd ~/Applications/Star\ Channel\ 34.app/Contents/Resources/autorun/lib
ls
cd ..
cd game
ls
cd ..
ls
cd renpy
ls
cd common/
ls
nvim 00console.rpy
clear
nvim
cd ~/.config/nvim/
l
ls
nvim Plug.vim
clear
ls
nvim
nvim
